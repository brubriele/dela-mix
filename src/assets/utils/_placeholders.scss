@import '../brand-tokens/typography.scss';
@import '../brand-tokens/colors.scss';

$bezier: cubic-bezier(0.75, 0, 0.25, 1);

//Links
%link {
  font-family: $font-family-btn;
  text-decoration: underline;
  text-decoration-thickness: 0.1em;
}

// Global items 

%title-responsive {

  @media(max-width: 768px) {
    margin: 1em 4em;
    margin: 0.5em 5em;
    font-size: 1rem;
  }
}

// Menu 



%disco-menu {
  .nav {
    color: white;

    &__trigger-finger {
      // The visible part of the trigger, this will be your "nav is closed!"-state
      position: fixed;
      top: 0;
      right: 0;
      z-index: 10;
      display: flex;
      align-items: center;
      width: 15px;
      height: 10px;
      margin: 40px;
      color: $highlight-color-pure;

      &::before {
        content: '';
        position: absolute;
        top: -5px;
        left: -5px;
        bottom: -5px;
        right: -5px;
        background: $highlight-color-pure;
        opacity: 0;
        z-index: -1;
        transition: opacity 0.3s $bezier;
      }

      span {
        display: block;
        width: 100%;
        height: 2px;
        transition: transform 1s $bezier;
        background: currentColor;

        &::before,
        &::after {
          // Create the hamburger lines
          content: "";
          position: absolute;
          left: 0;
          right: 0;
          display: block; // Labels are inline elements, it needs a display property that allows it it's own set height like block;
          height: 2px;
          background: currentColor; // inherits color set on parent
          transition: transform 0.4s $bezier, top 0.4s 0.4s $bezier, background 0.2s $bezier;
        }

        &::before {
          top: 0;
        }

        &::after {
          top: calc(100% - 2px);
        }
      }
    }

    &__trigger-input,
    &__submenu-trigger-input {
      // We  want to make the input invisible without using display: none;, because that will remove functionality.
      opacity: 0;
      width: 0;
      height: 0;
      appearance: none;
      position: fixed;
    }

    &__trigger-input {
      &:focus {
        &+label {
          color: white;

          &::before {
            opacity: 1;
          }
        }
      }

      &:checked {
        &+label {
          // change the label if the input is checked, this will be your "nav is open! ðŸŽ‰"-state
          height: 10px;
          color: white;

          span {
            transform: rotate(45deg);

            &::before,
            &::after {
              top: calc(50% - 1px);
              transition: transform 0.4s 0.4s $bezier, top 0.4s $bezier, background 0.2s $bezier;
            }

            &::after {
              transform: rotate(90deg);
            }
          }
        }

        &~ul {
          // We use a general sibling because it's less work, + label + ul would work as well
          z-index: 9;
          transform: none;
          transition: 0.5s $bezier;

          @media(min-width: 769px) {
            background-color: $feedback-color-warning-pure;
            left: 39.8vw;
            border-left: 4px solid black;
          }
        }
      }
    }

    &__list {
      // we want to make the top navigation items not visible while the input is not :checked.
      position: fixed;
      overflow-y: scroll;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      z-index: -1;
      background: $highlight-color-pure;
      font-size: 4rem;
      margin: 0;
      padding: 40px;
      transform: translate(100vw) rotate(42deg);
      transition: 0.2s $bezier;
      border-top: 4px solid black;

      @media(max-width:768px) {
        transform: translate(100vw) rotate(20deg);
      }

    }

    &__item {
      list-style: none;
      @media(max-width:768px) {
        position: relative;
        top: -3vh;
        height: 7vh;
      }

      &+& {
        margin-top: 20px;
      }
    }

    &__submenu-trigger-input {
      &:checked {
        &+label::after {
          transform: translateY(10px);
        }

        &~ul {
          display: block;
        }
      }

      &:focus {
        &+label::after {
          transform: translateY(5px);
        }
      }
    }

    &__submenu-trigger-finger {
      &::after {
        content: '';
        display: inline-block;
        border: 10px solid transparent;
        border-top-color: white;
        transition: 0.4s $bezier;
      }
    }

    &__link {
      text-decoration: none;
      color: inherit;

    }

    &__text {
      @extend %link;
    }

    &__list-child {
      display: none;
      font-size: 2rem;
      margin-top: 10px;
      padding-left: 2rem;
    }
  }

  main {
    padding: 6rem 4rem;

    h1 {
      font-size: 3rem;
      font-weight: normal;

      span {
        color: $highlight-color-pure;
      }
    }

    p {
      line-height: 1.5;
      margin-top: 1.5rem;
    }
  }
}

// Button 
%btn {
  display: flex;
  font-family: 'Archivo';
  font-style: normal;
  font-weight: 700;
  font-size: 16px;
  line-height: 24px;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  padding: 12px 24px;
  gap: 8px;
  border: 2px solid #000000;
  border-radius: 8px;
  cursor: pointer;
  margin: 1.4em 0px;
}

// Animations 


/* ----------------------------------------------
 * Generated by Animista on 2022-10-11 22:45:37
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

/**
 * ----------------------------------------
 * animation color-change-3x
 * ----------------------------------------
 */

@-webkit-keyframes kenburns-bottom-left {
  0% {
    -webkit-transform: scale(1) translate(0, 0);
    transform: scale(1) translate(0, 0);
    -webkit-transform-origin: 16% 84%;
    transform-origin: 16% 84%;
  }

  100% {
    -webkit-transform: scale(1.25) translate(-20px, 15px);
    transform: scale(1.25) translate(-20px, 15px);
    -webkit-transform-origin: left bottom;
    transform-origin: left bottom;
  }
}

@keyframes kenburns-bottom-left {
  0% {
    -webkit-transform: scale(1) translate(0, 0);
    transform: scale(1) translate(0, 0);
    -webkit-transform-origin: 16% 84%;
    transform-origin: 16% 84%;
  }

  100% {
    -webkit-transform: scale(1.25) translate(-20px, 15px);
    transform: scale(1.25) translate(-20px, 15px);
    -webkit-transform-origin: left bottom;
    transform-origin: left bottom;
  }
}

@-webkit-keyframes color-change-3x {
  0% {
    background: #d6e7ff;
  }

  50% {
    background: #9847f5;
  }

  100% {
    background: #f673ad;
  }
}

@keyframes color-change-3x {
  0% {
    background: #d6e7ff;
  }

  50% {
    background: #9847f5;
  }

  100% {
    background: #f673ad;
  }
}

/* ----------------------------------------------
 * Generated by Animista on 2022-10-11 22:56:4
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

/**
 * ----------------------------------------
 * animation vibrate-1
 * ----------------------------------------
 */
@-webkit-keyframes vibrate-1 {
  0% {
    -webkit-transform: translate(0);
    transform: translate(0);
  }

  20% {
    -webkit-transform: translate(-2px, 2px);
    transform: translate(-2px, 2px);
  }

  40% {
    -webkit-transform: translate(-2px, -2px);
    transform: translate(-2px, -2px);
  }

  60% {
    -webkit-transform: translate(2px, 2px);
    transform: translate(2px, 2px);
  }

  80% {
    -webkit-transform: translate(2px, -2px);
    transform: translate(2px, -2px);
  }

  100% {
    -webkit-transform: translate(0);
    transform: translate(0);
  }
}

@keyframes vibrate-1 {
  0% {
    -webkit-transform: translate(0);
    transform: translate(0);
  }

  20% {
    -webkit-transform: translate(-2px, 2px);
    transform: translate(-2px, 2px);
  }

  40% {
    -webkit-transform: translate(-2px, -2px);
    transform: translate(-2px, -2px);
  }

  60% {
    -webkit-transform: translate(2px, 2px);
    transform: translate(2px, 2px);
  }

  80% {
    -webkit-transform: translate(2px, -2px);
    transform: translate(2px, -2px);
  }

  100% {
    -webkit-transform: translate(0);
    transform: translate(0);
  }
}